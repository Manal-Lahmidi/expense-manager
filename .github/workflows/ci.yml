name: CI pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  IMAGE_NAME: expense-manager
  REGISTRY: docker.io

permissions:
  contents: read
  pull-requests: read
  packages: write  #for docker pushes

jobs:
  build-test-sonar:
    name: Build, Unit/IT tests, SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # ITs use Testcontainers; no DB service needed.

      - name: Running tests
        run: mvn -B -ntp clean verify -DskipITs=true -DskipTests=false

      - name: Generate Coverage Report
        run: mvn jacoco:report
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

      - name: Run OWASP Dependency Check
        run: mvn org.owasp:dependency-check-maven:check -DnvdApiKey=${NVD_API_KEY}
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # enables PR decoration
        run: >
          mvn -B -ntp org.sonarsource.scanner.maven:sonar-maven-plugin:5.2.0.4988:sonar
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.organization=manal-lahmidi
          -Dsonar.projectKey=Manal-Lahmidi_expense-manager
          -Dsonar.token=${SONAR_TOKEN}

      - name: Upload surefire & failsafe reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maven-test-reports
          path: |
            **/target/surefire-reports/*
            **/target/failsafe-reports/*

  docker:
    name: Build & Push Docker image
    needs: build-test-sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MAVEN_ARGS=-DskipTests

      - name: Scan Docker Image for Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          scan-ref: '${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest'
          format: 'table'
          exit-code: '1'

      - name: Show pushed image tags
        run: |
          echo "Docker image pushed successfully!"
          echo "Tags: ${{ steps.meta.outputs.tags }}"

      - name: Notify on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}