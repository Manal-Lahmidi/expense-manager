name: CI pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  IMAGE_NAME: expense-manager
  REGISTRY: docker.io

jobs:
  build-test-sonar:
    name: Build, Unit/IT tests, SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Sonar needs full history for PRs

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Enable Docker in Docker
        uses: docker/setup-buildx-action@v3

      - name: Debug Sonar files/dir
        run: |
          echo "PWD=$(pwd)"
          git rev-parse --show-toplevel || true
          ls -la
          echo "---- sonar-project.properties (if present) ----"
          [ -f sonar-project.properties ] && sed -n '1,120p' sonar-project.properties || echo "MISSING"

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B -ntp org.sonarsource.scanner.maven:5.2.0.4988:sonar
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.organization=manal-lahmidi
          -Dsonar.projectKey=Manal-Lahmidi_expense-manager
          -Dsonar.token=${SONAR_TOKEN}

  docker:
    name: Build & Push Docker image
    needs: build-test-sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MAVEN_ARGS=-DskipTests

      - name: Show pushed image tags
        run: |
          echo "Docker image pushed successfully!"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
